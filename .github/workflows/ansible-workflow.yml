name: Deploy with Ansible on AWX Server

on:
  workflow_dispatch:  # 수동 실행 버튼 활성화

jobs:
  deploy:
    runs-on: self-hosted  # GitHub에 등록한 로컬 Runner 사용

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: 환경 변수 설정
        run: |
          echo "DB_PASSWORD=soldesk1." >> $GITHUB_ENV
          echo "AWX_PASSWORD=redhat" >> $GITHUB_ENV
          echo "DB_SERVER=192.168.60.64" >> $GITHUB_ENV
          echo "ANSIBLE_MASTER=192.168.50.11" >> $GITHUB_ENV
          echo "ANSIBLE_PATH=/tmp/ansible-files" >> $GITHUB_ENV
          echo "DB_ANSIBLE_PATH=/var/lib/pgsql/data/service_templates/ansible" >> $GITHUB_ENV

      - name: sshpass 설치 확인
        run: |
          if ! command -v sshpass &> /dev/null; then
            echo "sshpass 설치 중..."
            sudo apt-get update
            sudo apt-get install -y sshpass
          else
            echo "sshpass가 이미 설치되어 있습니다."
          fi

      - name: PostgreSQL 서버에서 Ansible 정보 조회
        run: |
          echo "PostgreSQL에서 Ansible 배포 정보 가져오는 중..."
          
          SERVICE_INFO=$(sshpass -p "${{ env.DB_PASSWORD }}" ssh -o StrictHostKeyChecking=no postgres@${{ env.DB_SERVER }} \
            "psql -d solmakasedb -t -c \"SELECT name, deploy_script FROM servicetemplate WHERE name = 'ansible';\"")

          echo "Ansible 서비스 정보:"
          echo "$SERVICE_INFO"

      - name: Runner에 임시 디렉토리 생성
        run: |
          echo "Runner에 임시 디렉토리 생성 중..."
          mkdir -p /tmp/ansible-temp

      - name: DB 서버에서 Runner로 파일 다운로드
        run: |
          echo "DB 서버에서 Ansible 파일을 Runner로 다운로드 중..."
          sshpass -p "${{ env.DB_PASSWORD }}" scp -r -o StrictHostKeyChecking=no \
            postgres@${{ env.DB_SERVER }}:${{ env.DB_ANSIBLE_PATH }}/* /tmp/ansible-temp/
          
          echo "DB 서버에서 파일 다운로드 완료!"
          ls -la /tmp/ansible-temp/

      - name: Runner에서 AWX 서버로 파일 업로드
        run: |
          echo "Runner에서 AWX 서버로 Ansible 파일 업로드 중..."
          
          # AWX 서버에 디렉토리 생성
          sshpass -p "${{ env.AWX_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            awx@${{ env.ANSIBLE_MASTER }} "mkdir -p ${{ env.ANSIBLE_PATH }}"
          
          # Runner에서 AWX 서버로 파일 업로드
          sshpass -p "${{ env.AWX_PASSWORD }}" scp -r -o StrictHostKeyChecking=no \
            /tmp/ansible-temp/* awx@${{ env.ANSIBLE_MASTER }}:${{ env.ANSIBLE_PATH }}/
          
          echo "AWX 서버로 파일 업로드 완료!"

      - name: AWX 서버에서 파일 확인
        run: |
          echo "AWX 서버에 파일이 정상적으로 복사되었는지 확인 중..."
          sshpass -p "${{ env.AWX_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            awx@${{ env.ANSIBLE_MASTER }} "ls -la ${{ env.ANSIBLE_PATH }}"

      - name: AWX 서버에서 Ansible Playbook 실행
        run: |
          echo "AWX 서버에서 Ansible Playbook 실행 중..."
          
          # AWX 서버에 접속하여 ansible-playbook 명령 실행
          sshpass -p "${{ env.AWX_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            awx@${{ env.ANSIBLE_MASTER }} "cd ${{ env.ANSIBLE_PATH }} && ansible-playbook deployment.yml"
          
          echo "Ansible Playbook 실행 완료!"
